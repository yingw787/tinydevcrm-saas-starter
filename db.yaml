AWSTemplateFormatVersion: "2010-09-09"

Description: Database definition for the TinyDevCRM application.

Parameters:
  EC2KeyName:
    Type: "AWS::EC2::KeyPair::KeyName"
    Description: Name of an existing EC2 KeyPair to enable SSH access to the EC2 instances

  ECSClusterName:
    Type: String
    Default: tinydevcrm-db
    Description: Name of the ECS cluster for the database.

  PublicSubnetAReference:
    Type: String
    Default: tinydevcrm-ec2-networking-subnet-a
    Description: "Reference to public subnet A as part of stack 'tinydevcrm-ec2-networking.yaml'."

  PublicSubnetBReference:
    Type: String
    Default: tinydevcrm-ec2-networking-subnet-b
    Description: "Reference to public subnet B as part of stack 'tinydevcrm-ec2-networking.yaml'."

  SSHLocation:
    Type: String
    Default: "0.0.0.0/0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    Description: " The IP address range that can be used to SSH to the EC2 instances"
    MaxLength: "18"
    MinLength: "9"

  VPCReference:
    Type: String
    Default: tinydevcrm-ec2-networking-vpc
    Description: "Reference to VPC deployed as part of stack `tinydevcrm-ec2-networking.yaml`."

Resources:
  DatabaseLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub "/${AWS::StackName}/ecs/tinydevcrm-db"
      RetentionInDays: 7

  DatabaseCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: !Sub ${ECSClusterName}

  DatabaseLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Scheme: internet-facing
      Subnets:
        - "Fn::ImportValue": !Ref PublicSubnetAReference
        - "Fn::ImportValue": !Ref PublicSubnetBReference
      Type: network

  DatabaseTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Port: 5432
      Protocol: TCP
      TargetType: ip
      VpcId:
        "Fn::ImportValue": !Ref VPCReference

  DatabaseLoadBalancerListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DatabaseTargetGroup
      LoadBalancerArn: !Ref DatabaseLoadBalancer
      Port: 5432
      Protocol: TCP
